"""Initial clean migration

Revision ID: aeffbe57b8d9
Revises: 
Create Date: 2025-09-05 02:22:27.733738

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aeffbe57b8d9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assistants',
    sa.Column('assistant_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('graph_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('context', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('assistant_id')
    )
    op.create_index('idx_assistants_created_at', 'assistants', ['created_at'], unique=False)
    op.create_index('idx_assistants_graph_id', 'assistants', ['graph_id'], unique=False)
    op.create_table('store_items',
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('namespace', sa.String(length=255), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('namespace', 'key')
    )
    op.create_index('idx_store_key', 'store_items', ['key'], unique=False)
    op.create_index('idx_store_namespace', 'store_items', ['namespace'], unique=False)
    op.create_index('idx_store_namespace_key', 'store_items', ['namespace', 'key'], unique=False)
    op.create_index('idx_store_value_gin', 'store_items', ['value'], unique=False, postgresql_using='gin')
    op.create_table('threads',
    sa.Column('thread_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('interrupts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('thread_id')
    )
    op.create_index('idx_threads_created_at', 'threads', ['created_at'], unique=False)
    op.create_index('idx_threads_metadata_gin', 'threads', ['metadata'], unique=False, postgresql_using='gin')
    op.create_index('idx_threads_status', 'threads', ['status'], unique=False)
    op.create_index('idx_threads_updated_at', 'threads', ['updated_at'], unique=False)
    op.create_table('assistant_versions',
    sa.Column('version_id', sa.UUID(), nullable=False),
    sa.Column('assistant_id', sa.String(length=255), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('graph_id', sa.String(length=255), nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('context', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['assistant_id'], ['assistants.assistant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('version_id'),
    sa.UniqueConstraint('assistant_id', 'version')
    )
    op.create_index('idx_assistant_versions_assistant_id', 'assistant_versions', ['assistant_id'], unique=False)
    op.create_index('idx_assistant_versions_created_at', 'assistant_versions', ['created_at'], unique=False)
    op.create_index('idx_assistant_versions_version', 'assistant_versions', ['version'], unique=False)
    op.create_table('runs',
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('thread_id', sa.UUID(), nullable=True),
    sa.Column('assistant_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('kwargs', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('multitask_strategy', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['thread_id'], ['threads.thread_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('run_id')
    )
    op.create_index('idx_runs_assistant_id', 'runs', ['assistant_id'], unique=False)
    op.create_index('idx_runs_created_at', 'runs', ['created_at'], unique=False)
    op.create_index('idx_runs_metadata_gin', 'runs', ['metadata'], unique=False, postgresql_using='gin')
    op.create_index('idx_runs_status', 'runs', ['status'], unique=False)
    op.create_index('idx_runs_thread_id', 'runs', ['thread_id'], unique=False)
    op.create_index('idx_runs_updated_at', 'runs', ['updated_at'], unique=False)
    op.create_table('thread_states',
    sa.Column('state_id', sa.UUID(), nullable=False),
    sa.Column('thread_id', sa.UUID(), nullable=False),
    sa.Column('checkpoint_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('values', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('next_steps', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('checkpoint', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_checkpoint_id', sa.UUID(), nullable=True),
    sa.Column('tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['thread_id'], ['threads.thread_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('state_id')
    )
    op.create_index('idx_thread_states_checkpoint_id', 'thread_states', ['checkpoint_id'], unique=False)
    op.create_index('idx_thread_states_created_at', 'thread_states', ['created_at'], unique=False)
    op.create_index('idx_thread_states_thread_id', 'thread_states', ['thread_id'], unique=False)
    op.create_table('background_runs',
    sa.Column('background_run_id', sa.UUID(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.run_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('background_run_id')
    )
    op.create_index('idx_background_runs_run_id', 'background_runs', ['run_id'], unique=False)
    op.create_index('idx_background_runs_status', 'background_runs', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_background_runs_status', table_name='background_runs')
    op.drop_index('idx_background_runs_run_id', table_name='background_runs')
    op.drop_table('background_runs')
    op.drop_index('idx_thread_states_thread_id', table_name='thread_states')
    op.drop_index('idx_thread_states_created_at', table_name='thread_states')
    op.drop_index('idx_thread_states_checkpoint_id', table_name='thread_states')
    op.drop_table('thread_states')
    op.drop_index('idx_runs_updated_at', table_name='runs')
    op.drop_index('idx_runs_thread_id', table_name='runs')
    op.drop_index('idx_runs_status', table_name='runs')
    op.drop_index('idx_runs_metadata_gin', table_name='runs', postgresql_using='gin')
    op.drop_index('idx_runs_created_at', table_name='runs')
    op.drop_index('idx_runs_assistant_id', table_name='runs')
    op.drop_table('runs')
    op.drop_index('idx_assistant_versions_version', table_name='assistant_versions')
    op.drop_index('idx_assistant_versions_created_at', table_name='assistant_versions')
    op.drop_index('idx_assistant_versions_assistant_id', table_name='assistant_versions')
    op.drop_table('assistant_versions')
    op.drop_index('idx_threads_updated_at', table_name='threads')
    op.drop_index('idx_threads_status', table_name='threads')
    op.drop_index('idx_threads_metadata_gin', table_name='threads', postgresql_using='gin')
    op.drop_index('idx_threads_created_at', table_name='threads')
    op.drop_table('threads')
    op.drop_index('idx_store_value_gin', table_name='store_items', postgresql_using='gin')
    op.drop_index('idx_store_namespace_key', table_name='store_items')
    op.drop_index('idx_store_namespace', table_name='store_items')
    op.drop_index('idx_store_key', table_name='store_items')
    op.drop_table('store_items')
    op.drop_index('idx_assistants_graph_id', table_name='assistants')
    op.drop_index('idx_assistants_created_at', table_name='assistants')
    op.drop_table('assistants')
    # ### end Alembic commands ###
